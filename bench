#!/bin/bash

set -x

function bench_disk_IO_throughput
{
    # Variables: none
    # Workload: none
    # Metrics: sequential write TP
    echo
}

# tcpdump port http or https -i lo -w https-video.pcap
# wget -P output -c -r -np -k -L -p http://192.168.1.126/web/
# wget -P output -c -r -np -k -L -p http://192.168.1.126/video/
function bench_qzip_compression_ratio
{
    # Variables: raw vs. pcap & http vs. https & different data type
    # Workload: web, (OLTP queries,) video, (mixed)
    # Metrics: compression ratio
    local input_arr=(video-http.pcap video-https.pcap video.tar web-http.pcap web-https.pcap web.tar)
    local output_file=output/qzip_compression_ratio.csv

    printf "labels,compression ratio\n" >${output_file}
    for label in "${input_arr[@]}"; do
        echo -n "$label," >>${output_file}
        qzip -k input/$label 2>/dev/null | grep ratio | awk -F':' '{ print $2 }' | tr -d '\n' >>${output_file}
        echo >>${output_file}
    done
}

qzip_compression_level=(1 2 3 4)
# 4KB / 16KB / 64KB / 128KB / 512KB
qzip_compression_chunksz=(4096 16384 65536 131072 524288)
# for i in `seq -f %04g 0 999`; do cp web-http.pcap web-http$i.pcap; done
# tar -cf web-http-huge.pcap web-http-pcap-replicas
function bench_qzip_throughput_and_compression_ratio
{
    local input_file=input/web-http-huge.pcap
    local output_file_level=output/qzip_throughput_level.csv
    local output_file_chunk=output/qzip_throughput_chunk.csv

    printf "compression level,thoughput (Mbps),compression ratio\n" >${output_file_level}
    for level in "${qzip_compression_level[@]}"; do
        echo -n "$level," >>${output_file_level}
        qzip -L $level -k ${input_file} 2>/dev/null | \
            grep -E 'Throughput|ratio' | \
            awk -F':' '{ print $2 }' | \
            grep -Eo '[0-9]+([.][0-9]+)?' | \
            tr '\n' ',' >>${output_file_level}
        echo >>${output_file_level}
    done

    printf "chunk size (bytes),thoughput (Mbps),compression ratio\n" >${output_file_chunk}
    for chunksz in "${qzip_compression_chunksz[@]}"; do
        echo -n "$chunksz," >>${output_file_chunk}
        qzip -C $chunksz -k ${input_file} 2>/dev/null | \
            grep -E 'Throughput|ratio' | \
            awk -F':' '{ print $2 }' | \
            grep -Eo '[0-9]+([.][0-9]+)?' | \
            tr '\n' ',' >>${output_file_chunk}
        echo >>${output_file_chunk}
    done
}

case $1 in 
    cr)
        bench_qzip_compression_ratio
        ;;
    qtp)
        bench_qzip_throughput_and_compression_ratio
        ;;
    dio)
        bench_disk_IO_throughput
        ;;
    *)
        echo "Usage: $0 <bench_id>"
        exit 1;
esac
